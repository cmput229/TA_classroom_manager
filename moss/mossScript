#!/bin/bash

#------------------------------------------------------------------------------
#
#   mossScript
#------------------------------------------------------------------------------
#
#   Description:
#   This bash script is called by moss.py in order to compare source files in a 
#   subdirectory against each other to test for similarity among them.  In turn,
#   it calls the moss Perl script provided by Stanford and captures the reponse
#   page returned.  Then, it uses wget to store these results locally.
#
#   Expectations:
#   This script expects base code to concatenated into a single file called
#   "base.s" located in ./<lab>/instructor/
#   This script expects source code files to be named <name>.s and be located in
#   ./<lab>/<team>/
#
#   Results:
#   The pages generated by Stanford's moss are stored locally in ./results/<lab>/
#   The links in these pages are resolved to the local copies of the resources.
#   Source files in these pages are identified by their original paths, and can
#   be identified in terms of their team-name accordingly.
#   Files named "match<number>.html" provide a more detailed description of the
#   matching pairwise by file, and can be accessed locally through links as per
#   and as though it was the original page.
#   
#   The results pages are saved locally in the ./moss/results/<lab>/
#   The index page is renamed from <number>.html to index.html
#   Noah's wget:
#       wget -e robots=off -m http://moss.stanford.edu/results/134412096/
#   wget documentation:
#      https://www.gnu.org/software/wget/manual/wget.html#Download-Options
#      https://www.gnu.org/software/wget/manual/html_node/Advanced-Usage.html
#------------------------------------------------------------------------------

LAB="$1"
CMD="${@:2}"

# Capture the URL to the comparison
echo "Waiting for Stanford to respond."
RESULTS=$($CMD | grep '^http')

echo "Gathering resources locally."
# Get local copies by traversing page recursively & resolving links.
wget -e robots=off -p -r --quiet --convert-links $RESULTS -nH -nd --directory-prefix=./moss/results/$LAB/

echo "View ./moss/results/$LAB/index.html for results."
# Rename the <number>.html page to index.html
mv ./moss/results/$LAB/[1,2,3,4,5,6,7,8,9,0]* ./moss/results/$LAB/index.html

